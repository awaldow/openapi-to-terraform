name: openapi-to-terraform-$(Date:yyyyMMdd)$(Rev:.r)
trigger: none
pr:
  branches:
    include:
    - main
  paths:
    exclude:
    - README.md

variables:
- name: buildConfiguration
  value: 'Release'
- name: projectPath
  value: '**/openapi-to-terraform.Main.csproj'
- name: testProjectPath
  value: '**/openapi-to-terraform.[Tt]ests/*.csproj'

stages:
- stage: 'Build'
  displayName: 'Build the tool'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'windows-2019'

    steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 5.7'
      inputs:
        versionSpec: 5.7
    
    - task: TerraformInstaller@0
      displayName: 'Install Terraform 0.13.0'
      inputs:
        terraformVersion: '0.13.0'
        
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk 5.x'
      inputs:
        version: 5.x
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: '$(projectPath)'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: '$(projectPath)'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        projects: '$(testProjectPath)'
        arguments: '--configuration $(buildConfiguration) --collect "XPlat Code coverage"'
        publishTestResults: true
        testRunTitle: openapi-to-terraform.UnitTests  

    - script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.5.8'  
      displayName: 'Install ReportGenerator tool'  

    - script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"HtmlInline_AzurePipelines;Cobertura;Badges"'  
      displayName: 'Create reports'  
    
    - task: PublishCodeCoverageResults@1  
      displayName: 'Publish code coverage'
      inputs:  
        codeCoverageTool: Cobertura  
        summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'  
    # - task: DotNetCoreCLI@2
    #   displayName: 'dotnet publish'
    #   inputs:
    #     command: publish
    #     publishWebProjects: false
    #     projects: '$(projectPath)'
    #     arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs: 
        command: 'pack'
        arguments: '$(projectPath)'
        outputDir: '$(Build.ArtifactStagingDirectory)'
        configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
